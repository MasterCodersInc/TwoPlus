[{"/home/kirstie/Repos/TwoPlus/src/index.js":"1","/home/kirstie/Repos/TwoPlus/src/reportWebVitals.js":"2","/home/kirstie/Repos/TwoPlus/src/App.js":"3","/home/kirstie/Repos/TwoPlus/src/firebase.js":"4","/home/kirstie/Repos/TwoPlus/src/Editor.js":"5"},{"size":500,"mtime":1612031545989,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612031545989,"results":"8","hashOfConfig":"7"},{"size":337,"mtime":1612034668538,"results":"9","hashOfConfig":"7"},{"size":653,"mtime":1612031725108,"results":"10","hashOfConfig":"7"},{"size":2622,"mtime":1612118429841,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mj3vxl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kirstie/Repos/TwoPlus/src/index.js",[],["24","25"],"/home/kirstie/Repos/TwoPlus/src/reportWebVitals.js",[],"/home/kirstie/Repos/TwoPlus/src/App.js",["26"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"./Editor\";\nimport firebase from \"./firebase\";\n\nfirebase.firestore().collection(\"times\").add({\n  title: \"rubiks cube\",\n  time_seconds: 45,\n});\n\nfunction App() {\n  return (\n    <div>\n      <h1>Just Clock It</h1>\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","/home/kirstie/Repos/TwoPlus/src/firebase.js",[],"/home/kirstie/Repos/TwoPlus/src/Editor.js",["27","28","29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":10,"column":10,"nodeType":"37","messageId":"38","endLine":10,"endColumn":14},{"ruleId":"35","severity":1,"message":"40","line":10,"column":16,"nodeType":"37","messageId":"38","endLine":10,"endColumn":23},{"ruleId":"35","severity":1,"message":"41","line":12,"column":7,"nodeType":"37","messageId":"38","endLine":12,"endColumn":8},{"ruleId":"42","severity":1,"message":"43","line":21,"column":13,"nodeType":"44","endLine":26,"endColumn":4},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]